// Generated by ts-to-zod
import { z } from "zod";
import { type CraftEntryTypeRelationalFieldsWithMaxSetting } from "./generated-types";

export const craftDateTimeSchema = z.object({
  date: z.string(),
  timezone: z.string(),
  timezone_type: z.number(),
});

export const craftColorSchema = z.object({
  hex: z.string(),
  rgb: z.string(),
  hsl: z.string(),
});

export const craftCountrySchema = z.object({
  name: z.string(),
  countryCode: z.string(),
  threeLetterCode: z.string(),
  locale: z.string(),
  currencyCode: z.string(),
  timezones: z.array(z.string()),
});

export const craftMoneySchema = z.object({
  amount: z.string(),
  currency: z.string(),
});

export const craftLinkTargetSchema = z.union([
  z.literal("_blank"),
  z.literal("_self"),
]);

export const craftLinkSchema = z.object({
  elementType: z.string(),
  url: z.string(),
  label: z.string(),
  target: craftLinkTargetSchema,
  rel: z.string(),
  urlSuffix: z.string(),
  class: z.string(),
  id: z.string(),
  ariaLabel: z.string(),
  download: z.boolean(),
  downloadFile: z.string(),
});

export const craftJsonSchema = z.union([
  z.record(z.any()),
  z.array(z.record(z.any())),
]);

export const craftAssetFocalPointSchema = z.object({
  x: z.number(),
  y: z.number(),
});

export const craftAssetMetaSchema = z.object({
  id: z.number(),
  filename: z.string(),
  kind: z.string(),
  size: z.string(),
  mimeType: z.string(),
  extension: z.string(),
  cpEditUrl: z.string(),
  volumeId: z.number(),
});

export const craftAddressMetaSchema = z.object({
  id: z.number(),
});

export const craftUserStatusSchema = z.union([
  z.literal("inactive"),
  z.literal("active"),
  z.literal("pending"),
  z.literal("credentialed"),
  z.literal("suspended"),
  z.literal("locked"),
]);

export const craftUserMetaSchema = z.object({
  id: z.number(),
  status: craftUserStatusSchema,
  cpEditUrl: z.string(),
});

export const craftEntryRelationSchema = z.object({
  title: z.string(),
  slug: z.string(),
  url: z.string(),
  id: z.number(),
});

export const craftEntryStatusSchema = z.union([
  z.literal("live"),
  z.literal("pending"),
  z.literal("expired"),
  z.literal("disabled"),
]);

export const craftEntryMetaSchema = z.object({
  id: z.number(),
  entryType: z.string(),
  sectionId: z.number(),
  siteId: z.number(),
  url: z.string(),
  slug: z.string(),
  uri: z.string(),
  fullUri: z.string(),
  status: craftEntryStatusSchema,
  cpEditUrl: z.string(),
});

export const craftTagMetaSchema = z.object({
  id: z.number(),
});

export const craftTagSchema = z.object({
  metadata: craftTagMetaSchema,
  title: z.string(),
  slug: z.string(),
});

export const craftAddressSchema = z.object({
  metadata: craftAddressMetaSchema,
  title: z.string(),
  addressLine1: z.string(),
  addressLine2: z.string(),
  addressLine3: z.string(),
  countryCode: z.string(),
  locality: z.string(),
  postalCode: z.string(),
});

export const craftAssetRatioSchema = z.object({
  auto: z.string(),
  "1:1": z.string(),
  "34": z.string(),
  "16 9": z.string(),
  "2/3": z.string(),
  dominantColor: z.string(),
});

export const craftVolumeImagesSchema = z.object({
  metadata: craftAssetMetaSchema,
  height: z.number(),
  width: z.number(),
  focalPoint: craftAssetFocalPointSchema,
  url: z.string(),
  title: z.string(),
  srcSets: craftAssetRatioSchema,
  altText: z.string().nullable(),
  linkField: craftLinkSchema.nullable(),
});

export const craftVolumeGraphicsSchema = z.object({
  metadata: craftAssetMetaSchema,
  height: z.number(),
  width: z.number(),
  focalPoint: craftAssetFocalPointSchema,
  url: z.string(),
  title: z.string(),
  srcSets: craftAssetRatioSchema,
  alt: z.string().nullable(),
});

export const craftAssetSchema = z.union([
  craftVolumeImagesSchema,
  craftVolumeGraphicsSchema,
]);

export const craftEntryTypeImageTextSchema = z.object({
  title: z.string(),
  asset: z.array(craftAssetSchema).nullable(),
  plainText: z.string().nullable(),
});

export const dynamicHardTypeSchema = z.array(z.record(z.any()));

export const craftEntryTypeLinkSchema = z.object({
  title: z.string(),
  linkText: z.string().nullable(),
  openInNewTab: z.boolean().nullable(),
  linkField: craftLinkSchema.nullable(),
});

export const craftUserSchema = z.object({
  metadata: craftUserMetaSchema,
  username: z.string().nullable(),
  fullName: z.string().nullable(),
  photo: craftAssetSchema.nullable(),
  email: z.string().nullable(),
  address: z.array(craftAddressSchema).nullable(),
});

export const craftEntryTypeAuthorSchema = z.object({
  title: z.string(),
  selectAuthor: z.array(craftUserSchema).nullable(),
  address: z.array(craftAddressSchema).nullable(),
  linkField: craftLinkSchema.nullable(),
});

export const craftEntryTypeHyperLinkSchema = z.object({
  title: z.string(),
  hyperField: dynamicHardTypeSchema,
});

export const craftCategoryNewsFilterSchema = z.object({
  title: z.string(),
  entries: z.array(craftEntryRelationSchema).nullable(),
  selectAuthor: z.array(craftUserSchema).nullable(),
});

export const craftTableTableSchema = z.object({
  col1: z.string(),
  col1Handle: z.string(),
  col2: z.string(),
  col2Handle: z.string(),
});

export const craftCategoryBlogFiltersSchema = z.object({
  title: z.string(),
  plainText: z.string().nullable(),
});

export const craftOptionValueDropdownSchema = z.union([
  z.literal("optionA"),
  z.literal("optionB"),
]);

export const craftOptionDropdownSchema = z.object({
  label: z.string(),
  selected: z.boolean(),
  valid: z.boolean(),
  value: craftOptionValueDropdownSchema,
});

export const craftOptionValueHeadlineTagSchema = z.union([
  z.literal("h1"),
  z.literal("h2"),
  z.literal("h3"),
  z.literal("h4"),
]);

export const craftOptionHeadlineTagSchema = z.object({
  label: z.string(),
  selected: z.boolean(),
  valid: z.boolean(),
  value: craftOptionValueHeadlineTagSchema,
});

export const craftOptionValueRadioButtonsSchema = z.union([
  z.literal("optionA"),
  z.literal("optionB"),
]);

export const craftOptionRadioButtonsSchema = z.object({
  label: z.string(),
  selected: z.boolean(),
  valid: z.boolean(),
  value: craftOptionValueRadioButtonsSchema,
});

export const craftOptionValueCheckboxesSchema = z.union([
  z.literal("firstOption"),
  z.literal("secondOption"),
]);

export const craftOptionCheckboxesSchema = z.object({
  label: z.string(),
  selected: z.boolean(),
  valid: z.boolean(),
  value: craftOptionValueCheckboxesSchema,
});

export const craftOptionValueMultiSelectSchema = z.union([
  z.literal("optionA"),
  z.literal("optionB"),
]);

export const craftOptionMultiSelectSchema = z.object({
  label: z.string(),
  selected: z.boolean(),
  valid: z.boolean(),
  value: craftOptionValueMultiSelectSchema,
});

export const craftOptionValueButtonGroupSchema = z.union([
  z.literal("optionA"),
  z.literal("optionB"),
]);

export const craftOptionButtonGroupSchema = z.object({
  label: z.string(),
  selected: z.boolean(),
  valid: z.boolean(),
  value: craftOptionValueButtonGroupSchema,
});

export const craftEntryTypeCtaSchema = z.object({
  title: z.string(),
  headlineTag: craftOptionHeadlineTagSchema,
  plainText: z.string().nullable(),
  entries: z.array(craftEntryRelationSchema).nullable(),
});

export const craftEntryTypeNewsTeaserSchema = z.object({
  title: z.string(),
  categories: z.array(craftCategoryNewsFilterSchema).nullable(),
  newsTag: z.array(craftTagSchema).nullable(),
});

export const craftEntryTypeHeadlineSchema = z.object({
  title: z.string(),
  headlineTag: craftOptionHeadlineTagSchema,
});

export const craftEntryTypeDefaultFieldsSchema = z.object({
  title: z.string(),
  address: z.array(craftAddressSchema),
  asset: z.array(craftAssetSchema),
  buttonGroup: craftOptionButtonGroupSchema,
  categories: z.array(craftCategoryNewsFilterSchema),
  checkboxes: z.array(craftOptionCheckboxesSchema),
  color: craftColorSchema,
  country: craftCountrySchema,
  date: craftDateTimeSchema.nullable(),
  dropdown: craftOptionDropdownSchema.nullable(),
  email: z.string().nullable(),
  entries: z.array(craftEntryRelationSchema).nullable(),
  iconField: z.string().nullable(),
  json: craftJsonSchema.nullable(),
  lightswitch: z.boolean().nullable(),
  linkField: craftLinkSchema.nullable(),
  matrix: z
    .array(
      z.union([craftEntryTypeHeadlineSchema, craftEntryTypeImageTextSchema]),
    )
    .nullable(),
  money: craftMoneySchema.nullable(),
  multiSelect: z.array(craftOptionMultiSelectSchema).nullable(),
  number: z.number().nullable(),
  plainText: z.string().nullable(),
  radioButtons: craftOptionRadioButtonsSchema.nullable(),
  range: z.number().nullable(),
  table: z.array(craftTableTableSchema).nullable(),
  tags: z.array(craftTagSchema).nullable(),
  time: craftDateTimeSchema.nullable(),
  users: z.array(craftUserSchema).nullable(),
});

export const craftEntryTypeRelationalFieldsWithMaxSettingSchema: z.ZodObject<any, any, any> = z.object({
            title: z.string(),
            singleRelatedAddress: craftAddressSchema.nullable(),
            singleRelatedAsset: craftAssetSchema.nullable(),
            singleRelatedCategory: craftCategoryNewsFilterSchema.nullable(),
            singleMatrix: craftEntryTypeCtaSchema.nullable(),
            singleRelatedEntry: craftEntryRelationSchema.nullable(),
            singleRelatedUser: craftUserSchema.nullable(),
            matrixMaxRelations: z.lazy(() => craftEntryTypeRelationalFieldsWithMaxSettingSchema.nullable()),
          });

export const craftEntryTypeHomeSchema = z.object({
  title: z.string(),
  asset: z.array(craftAssetSchema).nullable(),
  selectAuthor: z.array(craftUserSchema).nullable(),
  plainText: z.string().nullable(),
  richtext: z.string().nullable(),
  contentBuilder: z
    .array(
      z.union([
        craftEntryTypeAuthorSchema,
        craftEntryTypeHeadlineSchema,
        craftEntryTypeImageTextSchema,
        craftEntryTypeNewsTeaserSchema,
        craftEntryTypeLinkSchema,
        craftEntryTypeHyperLinkSchema,
      ]),
    )
    .nullable(),
  cta: z.array(craftEntryTypeCtaSchema).nullable(),
});

export const craftPageDefaultFieldsSchema =
  craftEntryTypeDefaultFieldsSchema.extend({
    metadata: craftEntryMetaSchema,
    title: z.string(),
    sectionHandle: z.string(),
  });

export const craftPageRelationalFieldsWithMaxSettingSchema =
  craftEntryTypeRelationalFieldsWithMaxSettingSchema.extend({
    metadata: craftEntryMetaSchema,
    title: z.string(),
    sectionHandle: z.string(),
  });

export const craftPageHomeSchema = craftEntryTypeHomeSchema.extend({
  metadata: craftEntryMetaSchema,
  title: z.string(),
  sectionHandle: z.string(),
});
